const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');

const scrapeWebpage = async (req, res) => {
     try {
          console.log("Scrapper");

          const response = await axios.get('https://www.washingtonpost.com/business/2024/04/01/assisted-living-algorithm-staffing-lawsuits-brookdale/');
          if (response.status == 200) {

               const $ = cheerio.load(response.data)

               //getting para
               const para = $('p').text() + "\n";

               //getting para title
               const paraTitle = $(".PJLV[data-qa='headline-opinion-text'],.PJLV[data-qa='headline-text'], h1").text();

               // Get src attribute of the images with IDs img-1, img-2, and img-3
               const srcsets = [];

               $('.dcr-evn1e9 img').map(function (index, element) {
                    srcsets.push($(element).attr('src'))
               }).get();

               srcsets.forEach((srcset, index) => {
                    console.log(`srcset for img-${index + 1}:`, srcset);
               });

               //getting article writer
               const paraWriters = $("a[data-qa='author-name'], a[rel='author']").map(function () {
                    return $(this).text();
               }).get().join('|');

               // making josn stucture data

               const articleData = {
                    articleConentent: para,
                    articleTitle: paraTitle,
                    articleImages: srcsets,
                    articleWriter: paraWriters,
               }

               fs.writeFileSync('articleData.txt', JSON.stringify(articleData));
          }
     } catch (error) {
          console.error('An error occurred:', error);
     }
};

scrapeWebpage();