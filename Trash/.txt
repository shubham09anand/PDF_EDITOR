import React, { useCallback, useEffect, useState } from 'react';
import Quill from 'quill';
import "quill/dist/quill.snow.css";
import { io } from "socket.io-client";
import { useLocation } from 'react-router-dom';

const TextEditor = () => {
     const location = useLocation();
     const [socket, setSocket] = useState(null);
     const [quill, setQuill] = useState(null);

     const docId = location.pathname.split("/")[3];

     useEffect(() => {
          const s = io("http://localhost:3001");
          setSocket(s);

          return () => {
               s.disconnect();
          };
     }, []);

     useEffect(() => {
          if (socket === null || quill === null) return;

          socket.once("load-document", document => {
               quill.setContents(document);
               quill.enable();
          });

          socket.emit("get-document", docId);
     }, [socket, quill, docId]);

     useEffect(() => {
          if (socket == null || quill === null) return;

          const handler = (delta, oldDelta, source) => {
               if (source !== 'user') return;
               socket.emit("send-changes", delta);
          };

          quill.on('text-change', handler);

          return () => {
               quill.off('text-change', handler);
          };
     }, [socket, quill]);

     useEffect(() => {
          if (socket == null || quill === null) return;

          const handler = delta => {
               quill.updateContents(delta);
          };

          socket.on("receive-changes", handler);

          return () => {
               socket.off('receive-changes', handler);
          };
     }, [socket, quill]);

     const toolbarOptions = [
          ['bold', 'italic', 'underline', 'strike'],
          ['blockquote', 'code-block'],
          ['link', 'image', 'formula'],

          [{ 'header': 1 }, { 'header': 2 }],
          [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'list': 'check' }],
          [{ 'script': 'sub' }, { 'script': 'super' }],
          [{ 'indent': '-5' }, { 'indent': '+5' }],
          [{ 'direction': 'rtl' }],

          [{ 'size': ['small', false, 'large', 'huge'] }],
          [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

          [{ 'color': [] }, { 'background': [] }],
          [{ 'font': [] }],
          [{ 'align': [] }],

          ['clean']
     ];


     const wrapperRef = useCallback((wrapper) => {
          if (wrapper == null) return;

          wrapper.innerHTML = "";
          const editor = document.createElement("div");
          wrapper.append(editor);
          const q = new Quill(editor, {
               modules: {
                 toolbar: toolbarOptions
               },
               theme: 'snow'
             });
          q.disable();
          q.setText("Loading...");
          setQuill(q);
     }, []);

     return (
          <div id='container' ref={wrapperRef}></div>
     );
};

export default TextEditor;
